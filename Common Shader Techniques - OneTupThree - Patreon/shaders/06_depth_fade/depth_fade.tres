[gd_resource type="Shader" format=3 uid="uid://bgqdh1n4kmfi3"]

[resource]
code = "shader_type spatial;
render_mode blend_mix,depth_draw_opaque,cull_back,diffuse_burley,specular_schlick_ggx,unshaded;

uniform vec4 albedo : source_color;
uniform sampler2D texture_albedo : source_color,filter_linear_mipmap,repeat_enable;

uniform float proximity_fade_distance;
uniform sampler2D depth_texture : 
		hint_depth_texture, 
		repeat_disable, 
		filter_nearest;

uniform float x_movement_max = 1.0;

void vertex() {
	VERTEX += vec3(sin(TIME * 2.0) * x_movement_max, 0.0, 0.0);
}


void fragment() {
	vec2 base_uv = UV;
	vec4 albedo_tex = texture(texture_albedo,base_uv);
	ALBEDO = albedo.rgb * albedo_tex.rgb;
	ALPHA *= albedo.a * albedo_tex.a;
	
	float depth_tex = textureLod(depth_texture, SCREEN_UV, 0.0).r;
	vec4 world_pos = INV_PROJECTION_MATRIX 
			* vec4(SCREEN_UV * 2.0-1.0, depth_tex, 1.0);
	world_pos.xyz /= world_pos.w;
	
	ALPHA *= clamp(
			1.0 - smoothstep(
						world_pos.z + proximity_fade_distance,
						world_pos.z,
						VERTEX.z
					),
			0.0,
			1.0
			);
}"
